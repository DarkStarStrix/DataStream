Index: Loaders/Loaders_Performance.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import time\r\nimport psutil\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nimport pandas as pd\r\nfrom typing import List, Any\r\nimport logging\r\nimport numpy as np\r\nfrom dataclasses import dataclass\r\n\r\n# Configure logging\r\nlogging.basicConfig (level=logging.INFO)\r\nlogger = logging.getLogger (__name__)\r\n\r\n\r\n@dataclass\r\nclass PerformanceMetric:\r\n    \"\"\"Data class to store performance metrics\"\"\"\r\n    loader_name: str\r\n    time_taken: float\r\n    memory_used: float\r\n    cpu_percent: float\r\n    throughput: float\r\n    data_size: int\r\n\r\n\r\ndef _measure_performance(loader) -> PerformanceMetric:\r\n    \"\"\"Measure the performance of a data loader.\"\"\"\r\n    start_time = time.time ()\r\n    process = psutil.Process ()\r\n    start_memory = process.memory_info ().rss\r\n    start_cpu = process.cpu_percent (interval=None)\r\n\r\n    # Load data\r\n    data = loader.load_data ()\r\n    data_size = len (data)\r\n\r\n    end_time = time.time ()\r\n    end_memory = process.memory_info ().rss\r\n    end_cpu = process.cpu_percent (interval=None)\r\n\r\n    time_taken = end_time - start_time\r\n    memory_used = (end_memory - start_memory) / (1024 * 1024)  # Convert to MB\r\n    cpu_percent = end_cpu - start_cpu\r\n    throughput = data_size / time_taken if time_taken > 0 else 0\r\n\r\n    return PerformanceMetric (\r\n        loader_name=loader.__class__.__name__,\r\n        time_taken=time_taken,\r\n        memory_used=memory_used,\r\n        cpu_percent=cpu_percent,\r\n        throughput=throughput,\r\n        data_size=data_size\r\n    )\r\n\r\n\r\nclass PerformanceMonitor:\r\n    \"\"\"Monitor and visualize loader performance\"\"\"\r\n\r\n    def __init__(self, loaders: List [Any], num_runs: int = 3):\r\n        self.loaders = loaders\r\n        self.num_runs = num_runs\r\n        self.metrics: List [PerformanceMetric] = []\r\n\r\n        # Set up plot style\r\n        sns.set_style (\"whitegrid\")\r\n        sns.set_palette (\"husl\")\r\n\r\n    def run_benchmarks(self) -> None:\r\n        \"\"\"Run performance benchmarks for all loaders\"\"\"\r\n        for loader in self.loaders:\r\n            logger.info (f\"Benchmarking {loader.__class__.__name__}\")\r\n\r\n            # Run multiple times and average\r\n            run_metrics = []\r\n            for run in range (self.num_runs):\r\n                try:\r\n                    metric = _measure_performance (loader)\r\n                    run_metrics.append (metric)\r\n                    logger.info (f\"Run {run + 1}: Time={metric.time_taken:.2f}s, Memory={metric.memory_used:.2f}MB\")\r\n                except Exception as e:\r\n                    logger.error (f\"Error in run {run + 1} for {loader.__class__.__name__}: {str (e)}\")\r\n\r\n            # Average the metrics\r\n            if run_metrics:\r\n                avg_metric = PerformanceMetric (\r\n                    loader_name=loader.__class__.__name__,\r\n                    time_taken=np.mean ([m.time_taken for m in run_metrics]),\r\n                    memory_used=np.mean ([m.memory_used for m in run_metrics]),\r\n                    cpu_percent=np.mean ([m.cpu_percent for m in run_metrics]),\r\n                    throughput=np.mean ([m.throughput for m in run_metrics]),\r\n                    data_size=run_metrics [0].data_size\r\n                )\r\n                self.metrics.append (avg_metric)\r\n\r\n    def plot_metrics(self, save_path: str = None) -> None:\r\n        \"\"\"Create enhanced visualizations of performance metrics\"\"\"\r\n        if not self.metrics:\r\n            logger.error(\"No metrics to plot. Run benchmarks first.\")\r\n            return\r\n\r\n        # Convert metrics to DataFrame for easier plotting\r\n        df = pd.DataFrame([vars(m) for m in self.metrics])\r\n\r\n        # Create a figure with subplots\r\n        fig, axs = plt.subplots(1, 2, figsize=(18, 7))\r\n        fig.suptitle('Loader Performance Metrics', fontsize=20, y=1.05)\r\n\r\n        # Time and Memory subplot\r\n        ax1 = axs[0]\r\n        time_bars = ax1.bar(df['loader_name'], df['time_taken'], color='skyblue')\r\n        ax1.set_ylabel('Time (s)', color='skyblue', fontsize=12)\r\n        ax1.tick_params(axis='y', labelcolor='skyblue')\r\n        ax1.set_title('Time Taken', fontsize=14)\r\n\r\n        ax2 = ax1.twinx()\r\n        memory_line = ax2.plot(df['loader_name'], df['memory_used'], 'r-o', label='Memory Usage')\r\n        ax2.set_ylabel('Memory (MB)', color='red', fontsize=12)\r\n        ax2.tick_params(axis='y', labelcolor='red')\r\n\r\n        # Throughput subplot\r\n        ax3 = axs[1]\r\n        sns.barplot(data=df, x='loader_name', y='throughput', ax=ax3, color='purple')\r\n        ax3.set_ylabel('Records per Second', fontsize=12)\r\n        ax3.set_title('Data Loading Throughput', fontsize=14)\r\n\r\n        # Adjust tick labels\r\n        ax3.set_xticks(range(len(df['loader_name'])))\r\n        ax3.set_xticklabels(df['loader_name'], rotation=45, ha='right')\r\n\r\n        plt.tight_layout(rect=[0, 0, 1, 0.96])\r\n\r\n        if save_path:\r\n            plt.savefig(save_path, dpi=300, bbox_inches='tight')\r\n\r\n        plt.show()\r\n\r\n    def generate_report(self) -> str:\r\n        \"\"\"Generate a performance report\"\"\"\r\n        if not self.metrics:\r\n            return \"No metrics available. Run benchmarks first.\"\r\n\r\n        report = [\"Performance Benchmark Report\", \"=\" * 30, \"\"]\r\n\r\n        for metric in self.metrics:\r\n            report.extend ([\r\n                f\"\\nLoader: {metric.loader_name}\",\r\n                f\"Time Taken: {metric.time_taken:.2f} seconds\",\r\n                f\"Memory Used: {metric.memory_used:.2f} MB\",\r\n                f\"CPU Usage: {metric.cpu_percent:.1f}%\",\r\n                f\"Throughput: {metric.throughput:.0f} records/second\",\r\n                f\"Data Size: {metric.data_size:,} records\",\r\n                \"-\" * 30\r\n            ])\r\n\r\n        return \"\\n\".join (report)\r\n\r\n\r\n# Example usage\r\nif __name__ == \"__main__\":\r\n    from Loaders.csv_loader import CSVLoader\r\n    from Loaders.sql_loader import SQLLoader\r\n    from Loaders.s3_loader import S3Loader\r\n\r\n    # Initialize loaders\r\n    loaders = [\r\n        CSVLoader (file_path=\"C:/Users/kunya/PycharmProjects/DataStream/data/customers-10000.csv\"),\r\n        # SQLLoader (connection_string=\"your_connection_string\", query=\"SELECT * FROM your_table\"),\r\n        # S3Loader (bucket_name=\"your_bucket\", file_key=\"your_file_key\")\r\n    ]\r\n\r\n    # Create and run performance monitor\r\n    monitor = PerformanceMonitor (loaders, num_runs=3)\r\n    monitor.run_benchmarks ()\r\n\r\n    # Generate visualizations and report\r\n    monitor.plot_metrics (save_path=\"loader_performance.png\")\r\n    print (monitor.generate_report ())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Loaders/Loaders_Performance.py b/Loaders/Loaders_Performance.py
--- a/Loaders/Loaders_Performance.py	(revision 46e1e32b38ab05131bac02801dbe38f71836b720)
+++ b/Loaders/Loaders_Performance.py	(date 1737479672765)
@@ -3,13 +3,17 @@
 import matplotlib.pyplot as plt
 import seaborn as sns
 import pandas as pd
-from typing import List, Any
+from typing import List, Any, Optional
 import logging
 import numpy as np
 from dataclasses import dataclass
+from matplotlib.gridspec import GridSpec
 
-# Configure logging
-logging.basicConfig (level=logging.INFO)
+# Configure logging with a more detailed format
+logging.basicConfig (
+    level=logging.INFO,
+    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
+)
 logger = logging.getLogger (__name__)
 
 
@@ -55,33 +59,45 @@
 
 
 class PerformanceMonitor:
-    """Monitor and visualize loader performance"""
+    """Enhanced monitor and visualize loader performance"""
 
     def __init__(self, loaders: List [Any], num_runs: int = 3):
         self.loaders = loaders
         self.num_runs = num_runs
         self.metrics: List [PerformanceMetric] = []
 
-        # Set up plot style
-        sns.set_style ("whitegrid")
-        sns.set_palette ("husl")
+        # Set up custom style settings
+        self.colors = {
+            'primary': '#2E86AB',
+            'secondary': '#F24236',
+            'tertiary': '#8F3985',
+            'background': '#F8F9FA'
+        }
+
+        # Configure Seaborn style
+        sns.set_theme (style="whitegrid")
+        sns.set_palette ([self.colors ['primary'], self.colors ['secondary'], self.colors ['tertiary']])
 
     def run_benchmarks(self) -> None:
         """Run performance benchmarks for all loaders"""
         for loader in self.loaders:
-            logger.info (f"Benchmarking {loader.__class__.__name__}")
+            logger.info (f"Starting benchmark for {loader.__class__.__name__}")
 
-            # Run multiple times and average
             run_metrics = []
             for run in range (self.num_runs):
                 try:
                     metric = _measure_performance (loader)
                     run_metrics.append (metric)
-                    logger.info (f"Run {run + 1}: Time={metric.time_taken:.2f}s, Memory={metric.memory_used:.2f}MB")
+                    logger.info (
+                        f"Run {run + 1}/{self.num_runs}: "
+                        f"Time={metric.time_taken:.2f}s, "
+                        f"Memory={metric.memory_used:.2f}MB, "
+                        f"Throughput={metric.throughput:.0f} records/s"
+                    )
                 except Exception as e:
                     logger.error (f"Error in run {run + 1} for {loader.__class__.__name__}: {str (e)}")
+                    continue
 
-            # Average the metrics
             if run_metrics:
                 avg_metric = PerformanceMetric (
                     loader_name=loader.__class__.__name__,
@@ -93,64 +109,144 @@
                 )
                 self.metrics.append (avg_metric)
 
-    def plot_metrics(self, save_path: str = None) -> None:
+    def plot_metrics(self, save_path: Optional [str] = None) -> None:
         """Create enhanced visualizations of performance metrics"""
         if not self.metrics:
-            logger.error("No metrics to plot. Run benchmarks first.")
+            logger.error ("No metrics to plot. Run benchmarks first.")
             return
 
-        # Convert metrics to DataFrame for easier plotting
-        df = pd.DataFrame([vars(m) for m in self.metrics])
+        df = pd.DataFrame ([vars (m) for m in self.metrics])
 
-        # Create a figure with subplots
-        fig, axs = plt.subplots(1, 2, figsize=(18, 7))
-        fig.suptitle('Loader Performance Metrics', fontsize=20, y=1.05)
+        # Create figure with custom layout
+        fig = plt.figure (figsize=(20, 12))
+        gs = GridSpec (2, 2, figure=fig)
+
+        # Set the figure background
+        fig.patch.set_facecolor (self.colors ['background'])
 
-        # Time and Memory subplot
-        ax1 = axs[0]
-        time_bars = ax1.bar(df['loader_name'], df['time_taken'], color='skyblue')
-        ax1.set_ylabel('Time (s)', color='skyblue', fontsize=12)
-        ax1.tick_params(axis='y', labelcolor='skyblue')
-        ax1.set_title('Time Taken', fontsize=14)
+        # 1. Time and Memory Plot (Top Left)
+        ax1 = fig.add_subplot (gs [0, 0])
+        ax1.set_facecolor (self.colors ['background'])
 
-        ax2 = ax1.twinx()
-        memory_line = ax2.plot(df['loader_name'], df['memory_used'], 'r-o', label='Memory Usage')
-        ax2.set_ylabel('Memory (MB)', color='red', fontsize=12)
-        ax2.tick_params(axis='y', labelcolor='red')
+        # Bar plot for time
+        bars = ax1.bar (df ['loader_name'], df ['time_taken'],
+                        color=self.colors ['primary'], alpha=0.7)
+        ax1.set_ylabel ('Time (seconds)', color=self.colors ['primary'], fontsize=12)
+        ax1.tick_params (axis='y', labelcolor=self.colors ['primary'])
+
+        # Line plot for memory
+        ax2 = ax1.twinx ()
+        line = ax2.plot (df ['loader_name'], df ['memory_used'],
+                         color=self.colors ['secondary'],
+                         marker='o', linewidth=2, markersize=8)
+        ax2.set_ylabel ('Memory Usage (MB)', color=self.colors ['secondary'],
+                        fontsize=12)
+        ax2.tick_params (axis='y', labelcolor=self.colors ['secondary'])
+
+        # Add title
+        ax1.set_title ('Time and Memory Usage by Loader',
+                       pad=20, fontsize=14, fontweight='bold')
+
+        # 2. Throughput Plot (Top Right)
+        ax3 = fig.add_subplot (gs [0, 1])
+        ax3.set_facecolor (self.colors ['background'])
+
+        # Create throughput bars
+        throughput_bars = ax3.bar (df ['loader_name'], df ['throughput'],
+                                   color=self.colors ['tertiary'], alpha=0.7)
 
-        # Throughput subplot
-        ax3 = axs[1]
-        sns.barplot(data=df, x='loader_name', y='throughput', ax=ax3, color='purple')
-        ax3.set_ylabel('Records per Second', fontsize=12)
-        ax3.set_title('Data Loading Throughput', fontsize=14)
+        # Add value labels on top of bars
+        for bar in throughput_bars:
+            height = bar.get_height ()
+            ax3.text (bar.get_x () + bar.get_width () / 2., height,
+                      f'{int (height):,}',
+                      ha='center', va='bottom')
+
+        ax3.set_title ('Data Loading Throughput',
+                       pad=20, fontsize=14, fontweight='bold')
+        ax3.set_ylabel ('Records per Second', fontsize=12)
+
+        # 3. CPU Usage Plot (Bottom Left)
+        ax4 = fig.add_subplot (gs [1, 0])
+        ax4.set_facecolor (self.colors ['background'])
+
+        cpu_bars = ax4.bar (df ['loader_name'], df ['cpu_percent'],
+                            color=self.colors ['primary'], alpha=0.7)
+        ax4.set_title ('CPU Usage by Loader',
+                       pad=20, fontsize=14, fontweight='bold')
+        ax4.set_ylabel ('CPU Usage (%)', fontsize=12)
+
+        # Add value labels
+        for bar in cpu_bars:
+            height = bar.get_height ()
+            ax4.text (bar.get_x () + bar.get_width () / 2., height,
+                      f'{height:.1f}%',
+                      ha='center', va='bottom')
+
+        # 4. Data Size Plot (Bottom Right)
+        ax5 = fig.add_subplot (gs [1, 1])
+        ax5.set_facecolor (self.colors ['background'])
+
+        size_bars = ax5.bar (df ['loader_name'], df ['data_size'],
+                             color=self.colors ['tertiary'], alpha=0.7)
+
+        # Add value labels
+        for bar in size_bars:
+            height = bar.get_height ()
+            ax5.text (bar.get_x () + bar.get_width () / 2., height,
+                      f'{int (height):,}',
+                      ha='center', va='bottom')
+
+        ax5.set_title ('Data Size Processed',
+                       pad=20, fontsize=14, fontweight='bold')
+        ax5.set_ylabel ('Number of Records', fontsize=12)
 
-        # Adjust tick labels
-        ax3.set_xticks(range(len(df['loader_name'])))
-        ax3.set_xticklabels(df['loader_name'], rotation=45, ha='right')
+        # Global figure adjustments
+        plt.suptitle ('Data Loader Performance Analysis',
+                      fontsize=16, fontweight='bold', y=0.95)
 
-        plt.tight_layout(rect=[0, 0, 1, 0.96])
+        # Adjust layouts and rotate labels
+        for ax in [ax1, ax3, ax4, ax5]:
+            ax.tick_params (axis='x', rotation=45, labelsize=10)
+            # Customize grid
+            ax.grid (True, linestyle='--', alpha=0.7)
+
+        plt.tight_layout ()
 
         if save_path:
-            plt.savefig(save_path, dpi=300, bbox_inches='tight')
+            plt.savefig (save_path, dpi=300, bbox_inches='tight',
+                         facecolor=self.colors ['background'])
+            logger.info (f"Plot saved to {save_path}")
 
-        plt.show()
+        plt.show ()
 
     def generate_report(self) -> str:
-        """Generate a performance report"""
+        """Generate a detailed performance report"""
         if not self.metrics:
             return "No metrics available. Run benchmarks first."
 
-        report = ["Performance Benchmark Report", "=" * 30, ""]
+        report = [
+            "Performance Benchmark Report",
+            "=" * 50,
+            f"Generated on: {time.strftime ('%Y-%m-%d %H:%M:%S')}",
+            f"Number of runs per loader: {self.num_runs}",
+            "=" * 50,
+            ""
+        ]
 
         for metric in self.metrics:
             report.extend ([
                 f"\nLoader: {metric.loader_name}",
+                "-" * 30,
                 f"Time Taken: {metric.time_taken:.2f} seconds",
                 f"Memory Used: {metric.memory_used:.2f} MB",
                 f"CPU Usage: {metric.cpu_percent:.1f}%",
-                f"Throughput: {metric.throughput:.0f} records/second",
+                f"Throughput: {metric.throughput:,.0f} records/second",
                 f"Data Size: {metric.data_size:,} records",
-                "-" * 30
+                "\nPerformance Metrics:",
+                f"- Memory efficiency: {(metric.data_size / metric.memory_used):,.2f} records/MB",
+                f"- Processing speed: {(1000 * metric.time_taken / metric.data_size):.2f} ms/record",
+                "=" * 50
             ])
 
         return "\n".join (report)
@@ -164,9 +260,9 @@
 
     # Initialize loaders
     loaders = [
-        CSVLoader (file_path="C:/Users/kunya/PycharmProjects/DataStream/data/customers-10000.csv"),
-        # SQLLoader (connection_string="your_connection_string", query="SELECT * FROM your_table"),
-        # S3Loader (bucket_name="your_bucket", file_key="your_file_key")
+        CSVLoader (file_path="C:/Users/kunya/PycharmProjects/DataVolt/data/customers-10000.csv"),
+        # SQLLoader(connection_string="your_connection_string"),
+        # S3Loader(bucket_name="your_bucket", file_key="your_file_key")
     ]
 
     # Create and run performance monitor
Index: Data_Generators/Sparse_Data_Generator.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\r\nimport pandas as pd\r\nfrom scipy.sparse import random as sparse_random\r\n\r\n\r\ndef generate_sparse_data(num_samples=100, num_features=10, density=0.1):\r\n    sparse_matrix = sparse_random (num_samples, num_features, density=density, format='csr')\r\n    df = pd.DataFrame.sparse.from_spmatrix (sparse_matrix, columns=[f'feature_{i}' for i in range (num_features)])\r\n    return df\r\n\r\n\r\n# Example usage\r\nsparse_data = generate_sparse_data ()\r\nprint (sparse_data.head ())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Data_Generators/Sparse_Data_Generator.py b/Data_Generators/Sparse_Data_Generator.py
--- a/Data_Generators/Sparse_Data_Generator.py	(revision 46e1e32b38ab05131bac02801dbe38f71836b720)
+++ b/Data_Generators/Sparse_Data_Generator.py	(date 1737478849742)
@@ -1,4 +1,3 @@
-import numpy as np
 import pandas as pd
 from scipy.sparse import random as sparse_random
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9554aeb2-5cbe-4af6-887c-c88a1ace92fd\" name=\"Changes\" comment=\"New Pipelines lol\">\r\n      <change afterPath=\"$PROJECT_DIR$/Data_Generators/Test.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/EDA/Test.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/ETL/Test.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Loaders/Test.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Tests/Test_suite.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/preprocess/Test.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.coverage\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.coverage\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Config.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Config.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/EDA/EDA.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/EDA/EDA.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Loaders/__init__.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Loaders/__init__.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Loaders/csv_loader.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Loaders/csv_loader.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/MANIFEST.in\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/MANIFEST.in\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Tests/Test_data_loader.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Tests/VoltForm_Tests.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Tests/__init__.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/__init__.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/__init__.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Data_Generators/Data_Gen_Performance.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Data_Generators/Dense_Data_Generator.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Data_Generators/General_Data_Features.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Data_Generators/Sparse_Data_Generator.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Data_Generators/Tokenizing_Text_Data.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Data_Generators/__init__.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Models/__init__.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Models/model_export.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Tests/Test_Pipeline.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Tests/Test_data_loader.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/Tests/__init__.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/preprocess/Cleaning.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/preprocess/__init__.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/preprocess/encoding.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/preprocess/pipeline.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/lib/preprocess/scaling.py\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/datastream.egg-info/PKG-INFO\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/datastream.egg-info/SOURCES.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/datastream.egg-info/dependency_links.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/datastream.egg-info/requires.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/datastream.egg-info/top_level.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dist/datastream-0.0.1-py3-none-any.whl\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dist/datastream-0.0.1.tar.gz\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pyproject.toml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pyproject.toml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pytest.ini\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pytest.ini\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/setup.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/setup.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"REMOTE\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$/..\" source=\"origin/main\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Darkstalker &lt;allanw.mk@gmail.com&gt;\" />\r\n        <option value=\"Allan &lt;allanw.mk@gmail.com&gt;\" />\r\n        <option value=\"Allan\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\r\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;DarkStarStrix&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GitToolBoxStore\">\r\n    <option name=\"recentBranches\">\r\n      <RecentBranches>\r\n        <option name=\"branchesForRepo\">\r\n          <list>\r\n            <RecentBranchesForRepo>\r\n              <option name=\"branches\">\r\n                <list>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"main\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1735431436\" />\r\n                  </RecentBranch>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"master\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1735431435\" />\r\n                  </RecentBranch>\r\n                </list>\r\n              </option>\r\n              <option name=\"repositoryRootUrl\" value=\"file://$PROJECT_DIR$/..\" />\r\n            </RecentBranchesForRepo>\r\n          </list>\r\n        </option>\r\n      </RecentBranches>\r\n    </option>\r\n  </component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/DarkStarStrix/DataStream.git&quot;,\r\n    &quot;accountId&quot;: &quot;138b32ea-18a8-49cc-9639-12c0b010e1bc&quot;\r\n  }\r\n}</component>\r\n  <component name=\"InstanceColorv3\">\r\n    <option name=\"map\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/Writerside/gs.tree\">\r\n          <value>\r\n            <ColorState>\r\n              <option name=\"customOrder\" value=\"1\" />\r\n              <option name=\"first\">\r\n                <RgbState>\r\n                  <option name=\"blue\" value=\"60\" />\r\n                  <option name=\"darkBlue\" value=\"60\" />\r\n                  <option name=\"darkGreen\" value=\"68\" />\r\n                  <option name=\"darkRed\" value=\"206\" />\r\n                  <option name=\"green\" value=\"68\" />\r\n                  <option name=\"red\" value=\"206\" />\r\n                </RgbState>\r\n              </option>\r\n              <option name=\"second\">\r\n                <RgbState>\r\n                  <option name=\"blue\" value=\"65\" />\r\n                  <option name=\"darkBlue\" value=\"65\" />\r\n                  <option name=\"darkGreen\" value=\"126\" />\r\n                  <option name=\"darkRed\" value=\"231\" />\r\n                  <option name=\"green\" value=\"126\" />\r\n                  <option name=\"red\" value=\"231\" />\r\n                </RgbState>\r\n              </option>\r\n            </ColorState>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"$PROJECT_DIR$/../Writerside/gs.tree\">\r\n          <value>\r\n            <ColorState>\r\n              <option name=\"customOrder\" value=\"2\" />\r\n              <option name=\"first\">\r\n                <RgbState>\r\n                  <option name=\"blue\" value=\"225\" />\r\n                  <option name=\"darkBlue\" value=\"225\" />\r\n                  <option name=\"darkGreen\" value=\"149\" />\r\n                  <option name=\"darkRed\" value=\"56\" />\r\n                  <option name=\"green\" value=\"149\" />\r\n                  <option name=\"red\" value=\"56\" />\r\n                </RgbState>\r\n              </option>\r\n              <option name=\"second\">\r\n                <RgbState>\r\n                  <option name=\"blue\" value=\"234\" />\r\n                  <option name=\"darkBlue\" value=\"234\" />\r\n                  <option name=\"darkGreen\" value=\"197\" />\r\n                  <option name=\"darkRed\" value=\"81\" />\r\n                  <option name=\"green\" value=\"197\" />\r\n                  <option name=\"red\" value=\"81\" />\r\n                </RgbState>\r\n              </option>\r\n            </ColorState>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"KubernetesApiPersistence\">{}</component>\r\n  <component name=\"KubernetesApiProvider\">{\r\n  &quot;isMigrated&quot;: true\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2qoH9XR2Fscuz1jGJg4eCX4LZD2\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"NIXITCH_NIXPKGS_CONFIG\": \"\",\r\n    \"NIXITCH_NIX_CONF_DIR\": \"\",\r\n    \"NIXITCH_NIX_OTHER_STORES\": \"\",\r\n    \"NIXITCH_NIX_PATH\": \"\",\r\n    \"NIXITCH_NIX_PROFILES\": \"\",\r\n    \"NIXITCH_NIX_REMOTE\": \"\",\r\n    \"NIXITCH_NIX_USER_PROFILE_DIR\": \"\",\r\n    \"Python tests.Python tests for Test_Pipeline.TestPipeline.executor\": \"Run\",\r\n    \"Python tests.Python tests for Test_data_loader.TestCSVLoader.executor\": \"Run\",\r\n    \"Python tests.Python tests for Test_data_loader.TestEncoder.executor\": \"Run\",\r\n    \"Python tests.Python tests for Test_data_loader.TestIntegration.executor\": \"Run\",\r\n    \"Python tests.Python tests in Performance metrics.py.executor\": \"Run\",\r\n    \"Python tests.Python tests in Test_data_loader.py.executor\": \"Run\",\r\n    \"Python tests.pytest for Test_data_loader.TestIntegration.executor\": \"Run\",\r\n    \"Python tests.pytest for VoltForm_Tests.TestVoltForm.executor\": \"Run\",\r\n    \"Python tests.pytest for VoltForm_Tests.TestVoltFormMain.executor\": \"Run\",\r\n    \"Python tests.pytest in Test_data_loader.py.executor\": \"Run\",\r\n    \"Python tests.pytest in VoltForm_Tests.py.executor\": \"Run\",\r\n    \"Python.Basic_Pipeline.executor\": \"Run\",\r\n    \"Python.Basic_Pipeline_Performance.executor\": \"Run\",\r\n    \"Python.Data_Gen_Performance.executor\": \"Run\",\r\n    \"Python.Dense_Data_Generator.executor\": \"Run\",\r\n    \"Python.Example_EDA.executor\": \"Run\",\r\n    \"Python.Example_PCA_SVD.executor\": \"Run\",\r\n    \"Python.General_Data_Features.executor\": \"Run\",\r\n    \"Python.Loaders_Performance.executor\": \"Run\",\r\n    \"Python.Main.executor\": \"Run\",\r\n    \"Python.Performance metrics.executor\": \"Run\",\r\n    \"Python.Pipeline.executor\": \"Run\",\r\n    \"Python.Sparse_Data_Generator.executor\": \"Run\",\r\n    \"Python.Tokenizing_Text_Data.executor\": \"Run\",\r\n    \"Python.encoding.executor\": \"Run\",\r\n    \"Python.setup.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"last_opened_file_path\": \"C:/Users/kunya/PycharmProjects/DataStream\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"com.github.copilot.settings.ApplicationConfigurable\",\r\n    \"writerside.last.selected.productDataFlux\": \"gs\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"stardust.markdown.MarkdownSplitEditorSuppressor:keyList\": []\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"setup\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"DataStream\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/setup.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"pytest for Test_data_loader.TestIntegration\" type=\"tests\" factoryName=\"py.test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"DataStream\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_keywords\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_parameters\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;Test_data_loader.TestIntegration&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"pytest for VoltForm_Tests.TestVoltForm\" type=\"tests\" factoryName=\"py.test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"DataStream\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_keywords\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_parameters\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;VoltForm_Tests.TestVoltForm&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/Test_data_loader.py\" type=\"tests\" factoryName=\"py.test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"DataStream\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_keywords\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_parameters\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/Tests/Test_data_loader.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/VoltForm_Tests.py\" type=\"tests\" factoryName=\"py.test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"DataStream\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_keywords\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_parameters\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/Tests/VoltForm_Tests.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python tests.pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/Test_data_loader.py\" />\r\n        <item itemvalue=\"Python tests.pytest for Test_data_loader.TestIntegration\" />\r\n        <item itemvalue=\"Python.setup\" />\r\n        <item itemvalue=\"Python tests.pytest for VoltForm_Tests.TestVoltForm\" />\r\n        <item itemvalue=\"Python tests.pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/VoltForm_Tests.py\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-495700d161d3-aa17d162503b-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-243.22562.220\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9554aeb2-5cbe-4af6-887c-c88a1ace92fd\" name=\"Changes\" comment=\"\" />\r\n      <created>1735321857740</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1735321857740</updated>\r\n      <workItem from=\"1735321859787\" duration=\"621000\" />\r\n      <workItem from=\"1735322534001\" duration=\"5561000\" />\r\n      <workItem from=\"1735408059343\" duration=\"8219000\" />\r\n      <workItem from=\"1735418128169\" duration=\"80000\" />\r\n      <workItem from=\"1735418328304\" duration=\"79000\" />\r\n      <workItem from=\"1735418450378\" duration=\"163000\" />\r\n      <workItem from=\"1735418715556\" duration=\"9476000\" />\r\n      <workItem from=\"1735429056959\" duration=\"1300000\" />\r\n      <workItem from=\"1735430433455\" duration=\"516000\" />\r\n      <workItem from=\"1735431111572\" duration=\"320000\" />\r\n      <workItem from=\"1735431488893\" duration=\"373000\" />\r\n      <workItem from=\"1735431897450\" duration=\"939000\" />\r\n      <workItem from=\"1735433288106\" duration=\"528000\" />\r\n      <workItem from=\"1735438944070\" duration=\"3154000\" />\r\n      <workItem from=\"1735492525493\" duration=\"2858000\" />\r\n      <workItem from=\"1735495559175\" duration=\"1235000\" />\r\n      <workItem from=\"1735528604382\" duration=\"48000\" />\r\n      <workItem from=\"1735528679603\" duration=\"3710000\" />\r\n      <workItem from=\"1735578266387\" duration=\"8066000\" />\r\n      <workItem from=\"1735587478485\" duration=\"3350000\" />\r\n      <workItem from=\"1735750127446\" duration=\"4926000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Initial commit: Add DataStream project with modular toolkit for data engineering pipelines\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735430068065</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735430068065</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Initial commit: Add DataStream project with modular toolkit for data engineering pipelines\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735430340685</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735430340685</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Initial commit: Add DataStream project with modular toolkit for data engineering pipelines\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735430770813</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735430770813</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Initial commit: Add DataStream project with modular toolkit for data engineering pipelines\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735439042636</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735439042636</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"flake8.INI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735439635496</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735439635496</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"flake8.INI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735442865827</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735442865827</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735492650620</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735492650621</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735492980316</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735492980316</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735493211891</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735493211891</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735493288940</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735493288940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735494604865</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735494604865</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Datastream reload\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735495877752</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735495877752</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Yaml File for build\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735532450565</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735532450565</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"YAML File for build\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735586535575</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735586535575</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"YAML File for build\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735587297609</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735587297609</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"YAML File for build\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735587853932</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735587853932</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735588653266</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735588653266</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735589102972</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735589102972</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Pipeline fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735589615156</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735589615156</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"New Pipelines lol\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736806863058</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736806863058</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"21\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Initial commit: Add DataStream project with modular toolkit for data engineering pipelines\" />\r\n    <MESSAGE value=\"flake8.INI\" />\r\n    <MESSAGE value=\"Pipeline  fix\" />\r\n    <MESSAGE value=\"Datastream reload\" />\r\n    <MESSAGE value=\"Yaml File for build\" />\r\n    <MESSAGE value=\"YAML File for build\" />\r\n    <MESSAGE value=\"Pipeline fix\" />\r\n    <MESSAGE value=\"New Pipelines lol\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"New Pipelines lol\" />\r\n    <option name=\"GROUP_MULTIFILE_MERGE_BY_DIRECTORY\" value=\"true\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <default-breakpoints>\r\n        <breakpoint type=\"python-exception\">\r\n          <properties notifyOnTerminate=\"true\" exception=\"BaseException\">\r\n            <option name=\"notifyOnTerminate\" value=\"true\" />\r\n          </properties>\r\n        </breakpoint>\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/DataFlux$Pipeline.coverage\" NAME=\"Pipeline Coverage Results\" MODIFIED=\"1735408747186\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/DataFlux$Basic_Pipeline.coverage\" NAME=\"Basic_Pipeline Coverage Results\" MODIFIED=\"1735420538827\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Example\" />\r\n    <SUITE FILE_PATH=\"coverage/DataFlux$encoding.coverage\" NAME=\"encoding Coverage Results\" MODIFIED=\"1735416341052\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/preprocess\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Dense_Data_Generator.coverage\" NAME=\"Dense_Data_Generator Coverage Results\" MODIFIED=\"1735530061705\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Data Generators\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Example_EDA.coverage\" NAME=\"Example_EDA Coverage Results\" MODIFIED=\"1735754115658\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Example\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Sparse_Data_Generator.coverage\" NAME=\"Sparse_Data_Generator Coverage Results\" MODIFIED=\"1735530067975\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Data Generators\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Data_Gen_Performance.coverage\" NAME=\"Data_Gen_Performance Coverage Results\" MODIFIED=\"1735585048773\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Data_Generators\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Basic_Pipeline_Performance.coverage\" NAME=\"Basic_Pipeline_Performance Coverage Results\" MODIFIED=\"1735755166682\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Example\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Tokenizing_Text_Data.coverage\" NAME=\"Tokenizing_Text_Data Coverage Results\" MODIFIED=\"1735530042274\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Data Generators\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1735579427035\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/DataFlux$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1735423146256\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Tests\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$General_Data_Features.coverage\" NAME=\"General_Data_Features Coverage Results\" MODIFIED=\"1735530077530\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Data Generators\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Example_PCA_SVD.coverage\" NAME=\"Example_PCA_SVD Coverage Results\" MODIFIED=\"1735754693692\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Example\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Loaders_Performance.coverage\" NAME=\"Loaders_Performance Coverage Results\" MODIFIED=\"1735586010179\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Loaders\" />\r\n    <SUITE FILE_PATH=\"coverage/DataStream$Performance_metrics.coverage\" NAME=\"Performance metrics Coverage Results\" MODIFIED=\"1735584589920\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 46e1e32b38ab05131bac02801dbe38f71836b720)
+++ b/.idea/workspace.xml	(date 1737479914929)
@@ -4,50 +4,21 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9554aeb2-5cbe-4af6-887c-c88a1ace92fd" name="Changes" comment="New Pipelines lol">
-      <change afterPath="$PROJECT_DIR$/Data_Generators/Test.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/EDA/Test.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/ETL/Test.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Loaders/Test.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Tests/Test_suite.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/preprocess/Test.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.coverage" beforeDir="false" afterPath="$PROJECT_DIR$/.coverage" afterDir="false" />
+    <list default="true" id="9554aeb2-5cbe-4af6-887c-c88a1ace92fd" name="Changes" comment="Retry for tests">
+      <change afterPath="$PROJECT_DIR$/Loaders/Vector_database.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/VoltForm/Visualize_and_provision.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/csv-editor.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/csv-editor.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Config.py" beforeDir="false" afterPath="$PROJECT_DIR$/Config.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/EDA/EDA.py" beforeDir="false" afterPath="$PROJECT_DIR$/EDA/EDA.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Loaders/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/Loaders/__init__.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Loaders/csv_loader.py" beforeDir="false" afterPath="$PROJECT_DIR$/Loaders/csv_loader.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/MANIFEST.in" beforeDir="false" afterPath="$PROJECT_DIR$/MANIFEST.in" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Tests/Test_data_loader.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/Tests/VoltForm_Tests.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/Tests/__init__.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/__init__.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Data_Generators/Data_Gen_Performance.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Data_Generators/Dense_Data_Generator.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Data_Generators/General_Data_Features.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Data_Generators/Sparse_Data_Generator.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Data_Generators/Tokenizing_Text_Data.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Data_Generators/__init__.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Models/__init__.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Models/model_export.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Tests/Test_Pipeline.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Tests/Test_data_loader.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/Tests/__init__.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/preprocess/Cleaning.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/preprocess/__init__.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/preprocess/encoding.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/preprocess/pipeline.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/lib/preprocess/scaling.py" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/datastream.egg-info/PKG-INFO" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/datastream.egg-info/SOURCES.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/datastream.egg-info/dependency_links.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/datastream.egg-info/requires.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/datastream.egg-info/top_level.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dist/datastream-0.0.1-py3-none-any.whl" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dist/datastream-0.0.1.tar.gz" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pytest.ini" beforeDir="false" afterPath="$PROJECT_DIR$/pytest.ini" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/setup.py" beforeDir="false" afterPath="$PROJECT_DIR$/setup.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CODE_OF_CONDUCT.md" beforeDir="false" afterPath="$PROJECT_DIR$/CODE_OF_CONDUCT.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Data_Generators/Sparse_Data_Generator.py" beforeDir="false" afterPath="$PROJECT_DIR$/Data_Generators/Sparse_Data_Generator.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Loaders/Loaders_Performance.py" beforeDir="false" afterPath="$PROJECT_DIR$/Loaders/Loaders_Performance.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Loaders/loader_performance.png" beforeDir="false" afterPath="$PROJECT_DIR$/Loaders/loader_performance.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Writerside/images/completion_procedure.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Writerside/images/completion_procedure_dark.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Writerside/images/convert_table_to_xml.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Writerside/images/convert_table_to_xml_dark.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Writerside/images/new_topic_options.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Writerside/images/new_topic_options_dark.png" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -219,10 +190,13 @@
     "Python tests.pytest for Test_data_loader.TestIntegration.executor": "Run",
     "Python tests.pytest for VoltForm_Tests.TestVoltForm.executor": "Run",
     "Python tests.pytest for VoltForm_Tests.TestVoltFormMain.executor": "Run",
+    "Python tests.pytest for test_data_generation.TestDataGenerator.executor": "Run",
+    "Python tests.pytest for test_etl.TestETLProcessor.executor": "Run",
     "Python tests.pytest in Test_data_loader.py.executor": "Run",
     "Python tests.pytest in VoltForm_Tests.py.executor": "Run",
     "Python.Basic_Pipeline.executor": "Run",
     "Python.Basic_Pipeline_Performance.executor": "Run",
+    "Python.CSV_ETL.executor": "Run",
     "Python.Data_Gen_Performance.executor": "Run",
     "Python.Dense_Data_Generator.executor": "Run",
     "Python.Example_EDA.executor": "Run",
@@ -233,7 +207,9 @@
     "Python.Performance metrics.executor": "Run",
     "Python.Pipeline.executor": "Run",
     "Python.Sparse_Data_Generator.executor": "Run",
+    "Python.Test_suite.executor": "Run",
     "Python.Tokenizing_Text_Data.executor": "Run",
+    "Python.Visualize_and_provision.executor": "Run",
     "Python.encoding.executor": "Run",
     "Python.setup.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
@@ -247,13 +223,10 @@
     "nodejs_package_manager_path": "npm",
     "settings.editor.selected.configurable": "com.github.copilot.settings.ApplicationConfigurable",
     "writerside.last.selected.productDataFlux": "gs"
-  },
-  "keyToStringList": {
-    "stardust.markdown.MarkdownSplitEditorSuppressor:keyList": []
   }
 }]]></component>
-  <component name="RunManager">
-    <configuration name="setup" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+  <component name="RunManager" selected="Python.Loaders_Performance">
+    <configuration name="CSV_ETL" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="DataStream" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -262,11 +235,11 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ETL" />
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/setup.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ETL/CSV_ETL.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -275,58 +248,73 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="pytest for Test_data_loader.TestIntegration" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
+    <configuration name="Loaders_Performance" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="DataStream" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
       <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Tests" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Loaders" />
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_parameters" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;Test_data_loader.TestIntegration&quot;" />
-      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Loaders/Loaders_Performance.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="pytest for VoltForm_Tests.TestVoltForm" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
+    <configuration name="Main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="DataStream" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
       <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Tests" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/VoltForm" />
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_parameters" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;VoltForm_Tests.TestVoltForm&quot;" />
-      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/VoltForm/Main.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/Test_data_loader.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
+    <configuration name="Visualize_and_provision" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="DataStream" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
       <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Tests" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/VoltForm" />
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_parameters" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;$PROJECT_DIR$/Tests/Test_data_loader.py&quot;" />
-      <option name="_new_targetType" value="&quot;PATH&quot;" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/VoltForm/Visualize_and_provision.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/VoltForm_Tests.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
+    <configuration name="pytest for test_etl.TestETLProcessor" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
       <module name="DataStream" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -339,17 +327,17 @@
       <option name="_new_keywords" value="&quot;&quot;" />
       <option name="_new_parameters" value="&quot;&quot;" />
       <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;$PROJECT_DIR$/Tests/VoltForm_Tests.py&quot;" />
-      <option name="_new_targetType" value="&quot;PATH&quot;" />
+      <option name="_new_target" value="&quot;test_etl.TestETLProcessor&quot;" />
+      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
       <method v="2" />
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Python tests.pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/Test_data_loader.py" />
-        <item itemvalue="Python tests.pytest for Test_data_loader.TestIntegration" />
-        <item itemvalue="Python.setup" />
-        <item itemvalue="Python tests.pytest for VoltForm_Tests.TestVoltForm" />
-        <item itemvalue="Python tests.pytest in C:/Users/kunya/PycharmProjects/DataVolt/Tests/VoltForm_Tests.py" />
+        <item itemvalue="Python.Loaders_Performance" />
+        <item itemvalue="Python.Main" />
+        <item itemvalue="Python.Visualize_and_provision" />
+        <item itemvalue="Python tests.pytest for test_etl.TestETLProcessor" />
+        <item itemvalue="Python.CSV_ETL" />
       </list>
     </recent_temporary>
   </component>
@@ -550,7 +538,15 @@
       <option name="project" value="LOCAL" />
       <updated>1736806863058</updated>
     </task>
-    <option name="localTasksCounter" value="21" />
+    <task id="LOCAL-00021" summary="Retry for tests">
+      <option name="closed" value="true" />
+      <created>1736974858193</created>
+      <option name="number" value="00021" />
+      <option name="presentableId" value="LOCAL-00021" />
+      <option name="project" value="LOCAL" />
+      <updated>1736974858193</updated>
+    </task>
+    <option name="localTasksCounter" value="22" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -565,7 +561,8 @@
     <MESSAGE value="YAML File for build" />
     <MESSAGE value="Pipeline fix" />
     <MESSAGE value="New Pipelines lol" />
-    <option name="LAST_COMMIT_MESSAGE" value="New Pipelines lol" />
+    <MESSAGE value="Retry for tests" />
+    <option name="LAST_COMMIT_MESSAGE" value="Retry for tests" />
     <option name="GROUP_MULTIFILE_MERGE_BY_DIRECTORY" value="true" />
   </component>
   <component name="XDebuggerManager">
Index: CODE_OF_CONDUCT.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Contributor Covenant Code of Conduct\r\n\r\n## Our Pledge\r\n\r\nWe as members, contributors, and leaders pledge to make participation in our\r\ncommunity a harassment-free experience for everyone, regardless of age, body\r\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\r\nidentity and expression, level of experience, education, socio-economic status,\r\nnationality, personal appearance, race, religion, or sexual identity\r\nand orientation.\r\n\r\nWe pledge to act and interact in ways that contribute to an open, welcoming,\r\ndiverse, inclusive, and healthy community.\r\n\r\n## Our Standards\r\n\r\nExamples of behavior that contributes to a positive environment for our\r\ncommunity include:\r\n\r\n* Demonstrating empathy and kindness toward other people\r\n* Being respectful of differing opinions, viewpoints, and experiences\r\n* Giving and gracefully accepting constructive feedback\r\n* Accepting responsibility and apologizing to those affected by our mistakes,\r\n  and learning from the experience\r\n* Focusing on what is best not just for us as individuals, but for the\r\n  overall community\r\n\r\nExamples of unacceptable behavior include:\r\n\r\n* The use of sexualized language or imagery, and sexual attention or\r\n  advances of any kind\r\n* Trolling, insulting or derogatory comments, and personal or political attacks\r\n* Public or private harassment\r\n* Publishing others' private information, such as a physical or email\r\n  address, without their explicit permission\r\n* Other conduct which could reasonably be considered inappropriate in a\r\n  professional setting\r\n\r\n## Enforcement Responsibilities\r\n\r\nCommunity leaders are responsible for clarifying and enforcing our standards of\r\nacceptable behavior and will take appropriate and fair corrective action in\r\nresponse to any behavior that they deem inappropriate, threatening, offensive,\r\nor harmful.\r\n\r\nCommunity leaders have the right and responsibility to remove, edit, or reject\r\ncomments, commits, code, wiki edits, issues, and other contributions that are\r\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\r\ndecisions when appropriate.\r\n\r\n## Scope\r\n\r\nThis Code of Conduct applies within all community spaces, and also applies when\r\nan individual is officially representing the community in public spaces.\r\nExamples of representing our community include using an official e-mail address,\r\nposting via an official social media account, or acting as an appointed\r\nrepresentative at an online or offline event.\r\n\r\n## Enforcement\r\n\r\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\r\nreported to the community leaders responsible for enforcement at\r\nallanw.mk@gmail.com.\r\nAll complaints will be reviewed and investigated promptly and fairly.\r\n\r\nAll community leaders are obligated to respect the privacy and security of the\r\nreporter of any incident.\r\n\r\n## Enforcement Guidelines\r\n\r\nCommunity leaders will follow these Community Impact Guidelines in determining\r\nthe consequences for any action they deem in violation of this Code of Conduct:\r\n\r\n### 1. Correction\r\n\r\n**Community Impact**: Use of inappropriate language or other behavior deemed\r\nunprofessional or unwelcome in the community.\r\n\r\n**Consequence**: A private, written warning from community leaders, providing\r\nclarity around the nature of the violation and an explanation of why the\r\nbehavior was inappropriate. A public apology may be requested.\r\n\r\n### 2. Warning\r\n\r\n**Community Impact**: A violation through a single incident or series\r\nof actions.\r\n\r\n**Consequence**: A warning with consequences for continued behavior. No\r\ninteraction with the people involved, including unsolicited interaction with\r\nthose enforcing the Code of Conduct, for a specified period of time. This\r\nincludes avoiding interactions in community spaces as well as external channels\r\nlike social media. Violating these terms may lead to a temporary or\r\npermanent ban.\r\n\r\n### 3. Temporary Ban\r\n\r\n**Community Impact**: A serious violation of community standards, including\r\nsustained inappropriate behavior.\r\n\r\n**Consequence**: A temporary ban from any sort of interaction or public\r\ncommunication with the community for a specified period of time. No public or\r\nprivate interaction with the people involved, including unsolicited interaction\r\nwith those enforcing the Code of Conduct, is allowed during this period.\r\nViolating these terms may lead to a permanent ban.\r\n\r\n### 4. Permanent Ban\r\n\r\n**Community Impact**: Demonstrating a pattern of violation of community\r\nstandards, including sustained inappropriate behavior,  harassment of an\r\nindividual, or aggression toward or disparagement of classes of individuals.\r\n\r\n**Consequence**: A permanent ban from any sort of public interaction within\r\nthe community.\r\n\r\n## Attribution\r\n\r\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\r\nversion 2.0, available at\r\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\r\n\r\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\r\nenforcement ladder](https://github.com/mozilla/diversity).\r\n\r\n[homepage]: https://www.contributor-covenant.org\r\n\r\nFor answers to common questions about this code of conduct, see the FAQ at\r\nhttps://www.contributor-covenant.org/faq. Translations are available at\r\nhttps://www.contributor-covenant.org/translations.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CODE_OF_CONDUCT.md b/CODE_OF_CONDUCT.md
--- a/CODE_OF_CONDUCT.md	(revision 46e1e32b38ab05131bac02801dbe38f71836b720)
+++ b/CODE_OF_CONDUCT.md	(date 1737478452885)
@@ -106,7 +106,7 @@
 ### 4. Permanent Ban
 
 **Community Impact**: Demonstrating a pattern of violation of community
-standards, including sustained inappropriate behavior,  harassment of an
+standards, including sustained inappropriate behavior, harassment of an
 individual, or aggression toward or disparagement of classes of individuals.
 
 **Consequence**: A permanent ban from any sort of public interaction within
Index: .idea/csv-editor.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CsvFileAttributes\">\r\n    <option name=\"attributeMap\">\r\n      <map>\r\n        <entry key=\"\\data\\customers-100.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"\\data\\customers-1000.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"\\data\\customers-100000.csv\">\r\n          <value>\r\n            <Attribute>\r\n              <option name=\"separator\" value=\",\" />\r\n            </Attribute>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/csv-editor.xml b/.idea/csv-editor.xml
--- a/.idea/csv-editor.xml	(revision 46e1e32b38ab05131bac02801dbe38f71836b720)
+++ b/.idea/csv-editor.xml	(date 1737479914935)
@@ -3,6 +3,13 @@
   <component name="CsvFileAttributes">
     <option name="attributeMap">
       <map>
+        <entry key="\data\Financials.csv">
+          <value>
+            <Attribute>
+              <option name="separator" value="," />
+            </Attribute>
+          </value>
+        </entry>
         <entry key="\data\customers-100.csv">
           <value>
             <Attribute>
@@ -11,6 +18,13 @@
           </value>
         </entry>
         <entry key="\data\customers-1000.csv">
+          <value>
+            <Attribute>
+              <option name="separator" value="," />
+            </Attribute>
+          </value>
+        </entry>
+        <entry key="\data\customers-10000.csv">
           <value>
             <Attribute>
               <option name="separator" value="," />
Index: Loaders/Vector_database.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Loaders/Vector_database.py b/Loaders/Vector_database.py
new file mode 100644
--- /dev/null	(date 1737479081565)
+++ b/Loaders/Vector_database.py	(date 1737479081565)
@@ -0,0 +1,30 @@
+# Loaders/Vector_database.py
+import sqlalchemy
+from sqlalchemy import Table, Column, Integer, Float, MetaData
+
+class VectorDatabase:
+    def __init__(self, connection_string, table_name):
+        self.connection_string = connection_string
+        self.table_name = table_name
+        self.engine = sqlalchemy.create_engine(self.connection_string)
+        self.metadata = MetaData(self.engine)
+        self.table = Table(self.table_name, self.metadata,
+                           Column('id', Integer, primary_key=True),
+                           Column('vector', Float, nullable=False))
+
+    def create_table(self):
+        self.metadata.create_all(self.engine)
+
+    def insert_vector(self, vector):
+        with self.engine.connect() as connection:
+            insert_stmt = self.table.insert().values(vector=vector)
+            connection.execute(insert_stmt)
+
+    def query_vectors(self):
+        with self.engine.connect() as connection:
+            select_stmt = self.table.select()
+            result = connection.execute(select_stmt)
+            return [row['vector'] for row in result]
+
+    def close(self):
+        self.engine.dispose()
Index: VoltForm/Visualize_and_provision.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/VoltForm/Visualize_and_provision.py b/VoltForm/Visualize_and_provision.py
new file mode 100644
--- /dev/null	(date 1737477769575)
+++ b/VoltForm/Visualize_and_provision.py	(date 1737477769575)
@@ -0,0 +1,47 @@
+# voltform/visualize_and_provision.py
+import yaml
+from VoltForm import validate_voltform
+from VoltForm.engine import provision_compute_cluster
+
+def parse_yaml(config_file):
+    with open(config_file, 'r') as file:
+        config = yaml.safe_load(file)
+    return config
+
+def visualize_yaml_as_mermaid(config):
+    mermaid_diagram = "graph TD\n"
+    mermaid_diagram += "    A[Infrastructure] --> B[Compute Cluster]\n"
+    mermaid_diagram += f"    B --> C[Type: {config['infrastructure']['compute_cluster']['type']}]\n"
+    mermaid_diagram += f"    B --> D[Region: {config['infrastructure']['compute_cluster']['region']}]\n"
+    mermaid_diagram += f"    B --> E[Instance Type: {config['infrastructure']['compute_cluster']['instance_type']}]\n"
+    mermaid_diagram += f"    B --> F[Node Count: {config['infrastructure']['compute_cluster']['node_count']}]\n"
+    return mermaid_diagram
+
+def provision_infrastructure(config):
+    compute_cluster_config = {
+        'region': config['infrastructure']['compute_cluster']['region'],
+        'instance_type': config['infrastructure']['compute_cluster']['instance_type'],
+        'count': config['infrastructure']['compute_cluster']['node_count']
+    }
+    instances = provision_compute_cluster(compute_cluster_config)
+    return instances
+
+def run_workflow(config_file):
+    config = parse_yaml(config_file)
+
+    # Validate the configuration
+    if validate_voltform(config):
+        # Visualize the configuration as a Mermaid diagram
+        mermaid_diagram = visualize_yaml_as_mermaid(config)
+        print("Mermaid Diagram:\n", mermaid_diagram)
+
+        # Ask user to confirm provisioning
+        user_input = input("Do you want to provision the infrastructure? (yes/no): ")
+        if user_input.lower() == 'yes':
+            instances = provision_infrastructure(config)
+            print("Provisioned Instances:", instances)
+        else:
+            print("Provisioning cancelled.")
+
+if __name__ == '__main__':
+    run_workflow('C:/Users/kunya/PycharmProjects/DataVolt/VoltForm/Voltform_example.yaml')
